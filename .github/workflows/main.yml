name: CI

on:
  push:
    branches:
      - gh-actions

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - uses: actions/checkout@v1
      
      # - name: 'Get previous tag'
      #   id: previoustag
      #   uses: "WyriHaximus/github-action-get-previous-tag@master"
      #   env:
      #     GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      # - name: run
      #   run: ls -l

      - name: 'Get current version'
        id: getVersion
        # run: echo ::set-output name=VERSION::$(grep '"version"' ./package.json | cut -d '"' -f 4)
        # run: echo ::set-output name=VERSION::$(grep '"version"' package.json | cut -d '"' -f 4)
        # run: echo ::set-output name=VERSION::$(node -p "require('./package.json').version")
        # run: echo ::set-output name=VERSION::123
        run: |
          echo (node -p "require('./package.json').version") > MY_VAR
          echo $(cat MY_VAR)


      # - name: Echo version
      #   run: echo ${{ steps.getVersion.outputs.VERSION }}

      # - name: Replace tag
      #   uses: frabert/replace-string-action@v1.1
      #   id: tagName
      #   with:
      #     pattern: 'v'
      #     string: ${{ steps.previoustag.outputs.tag }}
      #     replace-with: ''

      # - name: yarn install
      #   run: |
      #     yarn install

      # - name: Build
      #   run: |
      #     yarn run build

      # - name: Upload Mac artifacts
      #   uses: actions/upload-artifact@v1
      #   if: startsWith(matrix.os, 'macOS')
      #   with:
      #     name: massCode-${{ steps.getVersion.outputs.VERSION }}-mac.zip
      #     path: build/massCode-${{ steps.getVersion.outputs.VERSION }}-mac.zip

      # - name: Upload Linux artifacts
      #   uses: actions/upload-artifact@v1
      #   if: startsWith(matrix.os, 'ubuntu')
      #   with:
      #     name: massCode-${{ steps.getVersion.outputs.VERSION }}.AppImage
      #     path: build/massCode-${{ steps.getVersion.outputs.VERSION }}.AppImage

      # - name: Upload Win artifacts
      #   uses: actions/upload-artifact@v1
      #   if: startsWith(matrix.os, 'windows')
      #   with:
      #     name: massCode-${{ steps.getVersion.outputs.VERSION }}.exe
      #     path: build/massCode Setup ${{ steps.getVersion.outputs.VERSION }}.exe